<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:component="component.*"
			   width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import component.ExtendsCheckbox2;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.ItemClickEvent;

			//[Bindable] [Embed(source="../assets/plus.png")]
			[Bindable] [Embed(source="../assets/collapse.png")]
			public var ICON_PLUS:Class;
			
			//[Bindable] [Embed(source="../assets/minus.png")]
			[Bindable] [Embed(source="../assets/expand.png")]
			public var ICON_MINUS:Class;
			
			[Bindable] private var checkBoxList:ArrayCollection = new ArrayCollection();
			
			public function init():void {
				AppLaunchBar.selectedIndex = 0;
				tree1.setStyle("disclosureOpenIcon", ICON_MINUS);
				tree1.setStyle("disclosureClosedIcon", ICON_PLUS);
				
				main_checkBox_id.state = 1;
				checkBoxClickHandler('M');
				
				
				//################################## Start: TODO create checkBox dynamic #################################//
				//Init checkbox list data
				/* checkBoxList.removeAll();
				checkBoxList.addItem( { type:'M', label:"ALL INDEX FIELDS", isTristate:true, state:1 } );
				checkBoxList.addItem( { type:'C', label:"IndexField1", isTristate:false, state:0 } );
				checkBoxList.addItem( { type:'C', label:"IndexField2", isTristate:false, state:0 } );
				checkBoxList.addItem( { type:'C', label:"IndexField3", isTristate:false, state:0 } );
				checkBoxList.addItem( { type:'C', label:"IndexField4", isTristate:false, state:0 } );
				checkBoxList.addItem( { type:'C', label:"IndexField5", isTristate:false, state:0 } );
				checkBoxList.addItem( { type:'C', label:"IndexField6", isTristate:false, state:0 } );
				checkBoxList.addItem( { type:'C', label:"IndexField7", isTristate:false, state:0 } );
				checkBoxList.addItem( { type:'C', label:"IndexField8", isTristate:false, state:0 } );
				checkBoxList.addItem( { type:'C', label:"IndexField9", isTristate:false, state:0 } );
				
				//set CheckBox
				
				for each ( var chkBoxObj:Object in checkBoxList ) {
					var addCheckBox:ExtendsCheckbox2 = new ExtendsCheckbox2();
					addCheckBox.chkBoxType = chkBoxObj.type;
					addCheckBox.label = chkBoxObj.label;
					addCheckBox.state = chkBoxObj.state;
					addCheckBox.isTristate = chkBoxObj.isTristate;
					addCheckBox.addEventListener(MouseEvent.CLICK,checkBox_changeHandler );
					indexFieldsVGroupID.addElement(addCheckBox);
				}
				setCheckBox('M'); */
				//################################## End: TODO create checkBox dynamic #################################//
				
			}
			
			protected function AppLaunchBar_itemClickHandler(event:ItemClickEvent):void	{
				FlexGlobals.topLevelApplication.linkBarChangePage(event.item.data);
			}
			
			protected function checkBoxClickHandler(action:String):void {
				if ( action == 'M' ) {
					if ( main_checkBox_id.state == 0 ) {
						child_checkBox_id1.state = 0;
						child_checkBox_id2.state = 0;
						child_checkBox_id3.state = 0;
						child_checkBox_id4.state = 0;
						child_checkBox_id5.state = 0;
						child_checkBox_id6.state = 0;
						child_checkBox_id7.state = 0;
					} else if ( main_checkBox_id.state == 1 ) {
						child_checkBox_id1.state = 1;
						child_checkBox_id2.state = 1;
						child_checkBox_id3.state = 1;
						child_checkBox_id4.state = 1;
						child_checkBox_id5.state = 1;
						child_checkBox_id6.state = 1;
						child_checkBox_id7.state = 1;
					} else {
						main_checkBox_id.state = 1
						child_checkBox_id1.state = 1;
						child_checkBox_id2.state = 1;
						child_checkBox_id3.state = 1;
						child_checkBox_id4.state = 1;
						child_checkBox_id5.state = 1;
						child_checkBox_id6.state = 1;
						child_checkBox_id7.state = 1;
					}
				} else {
					main_checkBox_id.state = findUnSelectedCheckBox();
				}
			}
			private function findUnSelectedCheckBox():int {
				var status:int = 0;
				
				status = child_checkBox_id1.state;

				if ( status == child_checkBox_id2.state ) {
					status = child_checkBox_id2.state
				} else {
					status = -1;
					return status;
				}
				
				if ( status == child_checkBox_id3.state ) {
					status = child_checkBox_id3.state
				} else {
					status = -1;
					return status;
				}
				
				if ( status == child_checkBox_id4.state ) {
					status = child_checkBox_id4.state
				} else {
					status = -1;
					return status;
				}
				
				if ( status == child_checkBox_id5.state ) {
					status = child_checkBox_id5.state
				} else {
					status = -1;
					return status;
				}
				
				if ( status == child_checkBox_id6.state ) {
					status = child_checkBox_id6.state
				} else {
					status = -1;
					return status;
				}
				
				if ( status == child_checkBox_id7.state ) {
					status = child_checkBox_id7.state
				} else {
					status = -1;
					return status;
				}
				
				return status;
			}
			
			
			//################################## Start: TODO create checkBox dynamic #################################//
			/* protected function checkBox_changeHandler(event:MouseEvent):void {
				var curSelectedType:String = String(event.currentTarget.chkBoxType)
				setCheckBox(curSelectedType);
			}
			
			protected function setCheckBox(action:String):void {
				
				var alertText:String = "";
				
				alertText += "action : " + action;
				
				if ( action == 'M' ) {
					var getMainChkBox:ExtendsCheckbox2 = indexFieldsVGroupID.getElementAt(0) as ExtendsCheckbox2;
					
					if ( getMainChkBox.state == 0 ) {
						updateChkBoxchilds(0);
					} else if ( getMainChkBox.state == 1 ) {
						updateChkBoxchilds(1);
					} else {
						getMainChkBox.state = 1
						updateChkBoxchilds(1);
					}
				} else {
					if ( findUnSelectedCheckBox() ) {
						getMainChkBox.state = -1;
						
					} else {
						getMainChkBox.state = 1;
					}
				}
				
				Alert.show(alertText);
				
			}
			private function updateChkBoxchilds(state:int):void {
				for ( var i:int = 1; i<checkBoxList.length; i++ ) {
					var getChkBox:ExtendsCheckbox2 = indexFieldsVGroupID.getElementAt(i) as ExtendsCheckbox2;
					getChkBox.state = state;
				}
			}
			private function findUnSelectedCheckBox():Boolean {
				var isChecked:Boolean = false;
				for each ( var chkBox:ExtendsCheckbox2 in indexFieldsVGroupID ) {
					if ( chkBox.state == 0 ) {
						isChecked = true;
						break;
					}
				}
				return isChecked;
			} */
			//################################## End: TODO create checkBox dynamic #################################//
			
			
			//############################## Start: DG1 Click Handler ###################################//
			public function dg1ChkBoxClickHandler(action:String):void {
				
				var selectedCount:int = 0;
				
				/* for each ( var obj:Object in dataProvider1List_ID ) {
					if (obj.isSelected == 1) {
						selectedCount++;
					}
				} */
				
				
				/* Alert.show(
					"Action is : " + action
					+ " \ndataProvider1List_ID.length : " + dataProvider1List_ID.length
					+ "\n"+ selectedCount + " row selected!"
				); */
				
				/* <fx:Object IndexValue1="xxxx" IndexValue2="xxxx" IndexValue3="xxxx" IndexValue4="xxxx" IndexValue5="xxxx" isSelected="false"></fx:Object> */
				
				
				if ( action == 'M' ) {
				//	advanceDG1_ID.headerRenderer.dg1_main_checkBox_id;
					
					for each ( var obj2:Object in dataProvider1List_ID ) {
						obj2.isSelected = 1;
					}
					
				}
				
			}
			//############################## End: DG1 Click Handler ###################################//
		]]>
	</fx:Script>
	
	<s:BorderContainer width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
		</s:layout>
				
		<!--Common header-->
		<s:BorderContainer id="CommonHeader" width="100%" height="38" borderVisible="false"
						   backgroundColor="#00315B7E">
			<s:layout>
				<s:HorizontalLayout paddingTop="0" paddingBottom="0" paddingLeft="5" paddingRight="5" verticalAlign="middle"/>
			</s:layout>
			<s:BorderContainer width="50%" height="{CommonHeader.height}" borderVisible="false"
							   backgroundColor="#00315B7E">
				<s:layout>
					<s:HorizontalLayout paddingTop="0" paddingBottom="0" gap="5" verticalAlign="middle"/>
				</s:layout>
				<s:Label text="Document Explorer" verticalAlign="top" 
						 fontFamily="Franklin Gothic Medium" fontSize="24" fontWeight="bold" color="white"/>
			</s:BorderContainer>
			<s:BorderContainer width="120" height="{CommonHeader.height}" borderVisible="false"
							   backgroundColor="#00315B7E">
				<s:layout>
					<s:HorizontalLayout paddingTop="0" paddingBottom="0" gap="5" verticalAlign="middle"/>
				</s:layout>
				<s:Label text="Notifications"
						 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal" color="#00C1DAD6"/>
				<s:Spacer width="5"/>
				<s:Label text="Help" 
						 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal" color="#00C1DAD6"/>
			</s:BorderContainer>
			<s:BorderContainer width="50%" height="{CommonHeader.height}" borderVisible="false"
							   backgroundColor="#00315B7E">
				<s:layout>
					<s:HorizontalLayout paddingTop="0" paddingBottom="0" gap="5" verticalAlign="middle" horizontalAlign="right"/>
				</s:layout>
				<s:Label text="Theme" 
						 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal" color="#00C1DAD6"/>
				<s:DropDownList height="21"/>
				<s:Spacer width="5"/>
				<s:Label text="Language" 
						 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal" color="#00C1DAD6"/>
				<s:DropDownList width="50" height="21"/>
				<s:Spacer width="5"/>
				<s:Label text="username" 
						 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal" color="#00C1DAD6"/>
				<s:Button label="Log off" buttonMode="true" 
						  height="21" click="FlexGlobals.topLevelApplication.logout()"
						  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold" 
						  styleName="logOffButton"/>
				<s:BitmapImage width="20" height="20" 
							   scaleMode="stretch" fillMode="scale" 
							   source="../assets/settingsicon.jpg"/>
			</s:BorderContainer>
		</s:BorderContainer>
		<mx:HRule width="100%" strokeWidth="1" strokeColor="black"/>
		<mx:Spacer height="5"/>
		<!--End Common Header-->
		
		<!--App launch bar-->
		<s:BorderContainer width="100%" height="26" borderVisible="false">
			<s:layout>
				<s:BasicLayout/>
			</s:layout>
			<mx:LinkBar id="AppLaunchBar" 
						x="185" width="100%" height="26" horizontalAlign="center" horizontalGap="8"
						fontFamily="Franklin Gothic Medium" fontSize="13" fontWeight="bold"
						dataProvider="{FlexGlobals.topLevelApplication.linkBarDataProvider}"
						itemClick="AppLaunchBar_itemClickHandler(event)"
						separatorColor="#00C1DAD6" separatorWidth="1" iconField="icon">
			</mx:LinkBar>
		</s:BorderContainer>
		
		<!--Stage-->
		<s:Spacer height="5"/>
		<s:BorderContainer id="Stage" width="100%" height="100%" borderVisible="false">
			<s:layout>
				<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
			</s:layout>
		
			<!--Logo and Search box-->
			<s:BorderContainer id="LogoAndSearchBox" width="100%" height="40" borderVisible="false">
				<s:layout>
					<s:BasicLayout/>
				</s:layout>
				<!--Logo-->
				<s:BorderContainer x="5" y="-35" width="175" height="75" borderVisible="false">
						<s:BitmapImage width="100%" height="100%" 
									   scaleMode="stretch" fillMode="scale" 
									   source="../assets/orionlogo.jpg"/>
				</s:BorderContainer>
				<!--SearchBox container-->
				<s:BorderContainer x="185" width="100%" height="40" borderVisible="true" backgroundColor="#00C1DAD6">
					<s:layout>
						<s:HorizontalLayout verticalAlign="middle" 
											paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5"/>
					</s:layout>
					<mx:Text text="Search for" height="21"  
							 fontFamily="Franklin Gothic Medium" fontSize="13" fontWeight="bold"/>
					
					<s:DropDownList width="150" height="21"
								rollOverColor="#00C0C0C0"
								fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal">
						<s:dataProvider>
							<mx:ArrayList>
								<fx:String>All the words</fx:String>
								<fx:String>Any of the words</fx:String>
								<fx:String>The phrase</fx:String>
							</mx:ArrayList>
						</s:dataProvider>
					</s:DropDownList>
					<s:TextInput width="100%"/>
					<s:Button label="Search" height="21" 
							  buttonMode="true" styleName="searchButton"
							  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold"/>
				</s:BorderContainer>
			</s:BorderContainer>
			
			<!--Search Filters and Search Results-->
			<s:BorderContainer id="SearchFiltersAndSearchResults" width="100%" height="100%" borderVisible="false">
				<s:layout>
					<s:HorizontalLayout paddingTop="5" paddingBottom="5"
									  paddingLeft="5" paddingRight="5" 
									  gap="10"/>
				</s:layout>
				<!--Search filters outer container-->
				<s:BorderContainer id="SearchFilters" 
								   width="170" height="100%" borderVisible="true">
					<s:layout>
						<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="0"/>
					</s:layout>
					<s:BorderContainer width="170" height="20" borderVisible="true" borderColor="#00315B7E" backgroundColor="#00315B7E" >
						<s:layout>
							<s:VerticalLayout verticalAlign="middle" 
											  paddingTop="0" paddingBottom="0" paddingLeft="5" paddingRight="5" gap="0"/>
						</s:layout>
						<mx:Text text="Search Filters"
								 color="white" fontFamily="Franklin Gothic Medium" fontSize="13" fontWeight="bold"/>
					</s:BorderContainer>
					<!--Search filters inner container-->
					<s:BorderContainer width="170" height="100%" borderVisible="true" backgroundColor="#00C1DAD6">
						<s:layout>
							<s:VerticalLayout paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5" gap="0"/>
						</s:layout>
						<mx:Text text="Recent searches:"
								 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
						<s:DropDownList width="160"/>
						<s:Spacer height="0"/>
						<mx:Text text="Saved searches:"
								 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
						<s:DropDownList width="160"/>
						<s:Spacer height="0"/>
						<mx:Text text="Folders:" 
								 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
						
						<s:BorderContainer id="Folders" width="100%" height="100%" minHeight="20"
										   borderVisible="true" dropShadowVisible="false" >
										 
							<s:layout>
								<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
												  gap="0"/>
							</s:layout>
							<!--<s:Scroller x="{Folders.x}" width="{Folders.width-5}" height="{Folders.height-5}" top="0" bottom="0" left="0" right="0"
										minHeight="{Folders.minHeight-5}" maxHeight="{IndexFields.maxHeight-5}">-->
								<s:VGroup id="vgroup1" width="{Folders.width-1}" height="{Folders.height-2}" 
										  minHeight="{Folders.minHeight-2}" maxHeight="{Folders.maxHeight-2}"
										  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
										  gap="0">
										  <mx:Tree id="tree1" width="{vgroup1.width}" 
												 height="{vgroup1.height}"
												 minHeight="{vgroup1.minHeight}" 
												 labelField="@label" rowHeight="16"
												 showRoot="true" borderSkin="{null}" 
												 itemRenderer="component.TreeItemRendererClass"
												 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal">
											<mx:XMLListCollection>
												<fx:XMLList>
													<folder label="ALL FOLDERS" checked="1"/>
													<folder label="Folder1" checked="1">
														<Pfolder label="Subfolder1" checked="1"/>
													</folder>
													<folder label="Folder2" checked="1">
														<Pfolder label="Subfolder1" checked="1"/>
														<Pfolder label="Subfolder2" checked="1"/>
													</folder>
													<folder label="Folder3" checked="1">
														<Pfolder label="Subfolder1" checked="1"/>
														<Pfolder label="Subfolder2" checked="1"/>
													</folder>
													<folder label="Folder4" checked="1">
														<Pfolder label="Subfolder1" checked="1"/>
													</folder>
													<folder label="Folder5" checked="1">
														<Pfolder label="Subfolder1" checked="1"/>
													</folder>
													<folder label="Folder6" checked="1"/>	
												</fx:XMLList>
											</mx:XMLListCollection>
										  </mx:Tree>
								</s:VGroup>
							<!--</s:Scroller>  -->
						</s:BorderContainer>
						
						<s:Spacer height="3"/>
						
						<mx:Text text="Index fields:"
								 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
						
						<s:Spacer height="3"/>
						
						<s:BorderContainer id="IndexFields" width="100%" height="100%" minHeight="20"
										   borderVisible="true" dropShadowVisible="false">
							<s:layout>
								<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0"
												  gap="0"/>
							</s:layout>
							<s:Scroller id="scroller1" x="{IndexFields.x}"
										width="{IndexFields.width-1}" maxWidth="{IndexFields.width-1}"
										height="{IndexFields.height-2}" minHeight="{IndexFields.minHeight-2}"
										maxHeight="{IndexFields.maxHeight-2}"
										top="0" bottom="0" left="0" right="0">
								
								<s:VGroup id="indexFieldsVGroupID" width="{scroller1.width}" height="{scroller1.height}" 
										  minHeight="{scroller1.minHeight}" maxHeight="{scroller1.maxHeight}"
										  paddingTop="0" paddingBottom="0" paddingLeft="5" paddingRight="0" gap="0" 
										  fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal">
											
											<component:ExtendsCheckbox2 width="100" id="main_checkBox_id" label="ALL INDEX FIELDS" isTristate="true" click="checkBoxClickHandler('M')"/>
											<component:ExtendsCheckbox2 width="100" id="child_checkBox_id1" label="IndexField1" isTristate="false" click="checkBoxClickHandler('C')"/>
											<component:ExtendsCheckbox2 width="100" id="child_checkBox_id2" label="IndexField2" isTristate="false" click="checkBoxClickHandler('C')"/>
											<component:ExtendsCheckbox2 width="100" id="child_checkBox_id3" label="IndexField3" isTristate="false" click="checkBoxClickHandler('C')"/>
											<component:ExtendsCheckbox2 width="100" id="child_checkBox_id4" label="IndexField4" isTristate="false" click="checkBoxClickHandler('C')"/>
											<component:ExtendsCheckbox2 width="100" id="child_checkBox_id5" label="IndexField5" isTristate="false" click="checkBoxClickHandler('C')"/>
											<component:ExtendsCheckbox2 width="100" id="child_checkBox_id6" label="IndexField6" isTristate="false" click="checkBoxClickHandler('C')"/>
											<component:ExtendsCheckbox2 width="100" id="child_checkBox_id7" label="IndexField7" isTristate="false" click="checkBoxClickHandler('C')"/>
									
								</s:VGroup>                 
							</s:Scroller>
						</s:BorderContainer>
						
						
						<s:CheckBox label="  Search full text" 
									fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
						<s:Spacer height="0"/>
						<mx:Text text="Document formats:" 
								 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
						<s:DropDownList width="160"/>
						<s:Spacer height="0"/>
						<mx:Text text="When actioned:" 
								 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
						<s:DropDownList width="160"/>
						<s:Spacer height="0"/>
						<mx:Text text="Document context:" 
								 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
						<s:DropDownList width="160"/>
						<s:Spacer height="6"/>
						<s:BorderContainer width="170%" height="{FilterSearchButton.height}" 
										   borderVisible="false" backgroundColor="#00C1DAD6">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="right"/>
							</s:layout>
							<s:Button id="FilterSearchButton" height="21" 
									  label="Search" 
									  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold" 
									  buttonMode="true" styleName="searchButton"/>
							</s:BorderContainer>
					</s:BorderContainer>
				</s:BorderContainer>
				
				<!--Results-->
				<s:BorderContainer id="SearchResults" width="100%" height="100%" borderVisible="false">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					<mx:VDividedBox height="100%" width="100%">
						<component:CustomTitleWindow title="DocumentClass1" 
									   height="100%" width="100%" skinClass="component.CustomTitleWindowSkin"
									   dropShadowVisible="false" headerHeight="16"
									   fontFamily="Franklin Gothic Medium" fontSize="13" fontWeight="bold">
							
							<mx:AdvancedDataGrid id="advanceDG1_ID" height="100%" width="100%" borderVisible="false" rowHeight="20"
												 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal">
								
								<mx:dataProvider>
									<mx:ArrayCollection id="dataProvider1List_ID">
										<fx:Object IndexValue1="xxxx" IndexValue2="xxxx" IndexValue3="xxxx" IndexValue4="xxxx" IndexValue5="xxxx" isSelected="0"></fx:Object>
										<fx:Object IndexValue1="xxxx" IndexValue2="xxxx" IndexValue3="xxxx" IndexValue4="xxxx" IndexValue5="xxxx" isSelected="0"></fx:Object>
										<fx:Object IndexValue1="xxxx" IndexValue2="xxxx" IndexValue3="xxxx" IndexValue4="xxxx" IndexValue5="xxxx" isSelected="0"></fx:Object>
									</mx:ArrayCollection>
								</mx:dataProvider>
								
								<mx:groupedColumns>
									<mx:AdvancedDataGridColumn width="20" editorDataField="selected" sortable="false">
										<mx:headerRenderer>
											<fx:Component>
												<mx:HBox horizontalAlign="center" width="100%" verticalAlign="middle" paddingLeft="0" paddingRight="0">
													<component:ExtendsCheckbox2 width="10" id="dg1_main_checkBox_id" isTristate="true"
																				state="-1" click="outerDocument.dg1ChkBoxClickHandler('M')"/>
												</mx:HBox>
											</fx:Component>
										</mx:headerRenderer>
										<mx:itemRenderer>
											<fx:Component>
												<!--<mx:CheckBox/> selected="{data.isDelete}" change="outerDocument.setDeleteAt(data.internalSv)"-->
												<mx:HBox horizontalAlign="center" verticalAlign="middle" paddingLeft="0" paddingRight="0">
													<component:ExtendsCheckbox2 width="10" isTristate="false" state="1"
																				click="outerDocument.dg1ChkBoxClickHandler('C')"/>
												</mx:HBox>
											</fx:Component>
										</mx:itemRenderer>
									</mx:AdvancedDataGridColumn>
									
									<mx:AdvancedDataGridColumn width="20"/>
									<mx:AdvancedDataGridColumn width="20"/>
									<mx:AdvancedDataGridColumn dataField="IndexValue1" headerText="IndexField1"/>
									<mx:AdvancedDataGridColumn dataField="IndexValue2" headerText="IndexField2"/>
									<mx:AdvancedDataGridColumn dataField="IndexValue3" headerText="IndexField3"/>
									<mx:AdvancedDataGridColumn dataField="IndexValue4" headerText="IndexField4"/>
									<mx:AdvancedDataGridColumn dataField="IndexValue5" headerText="IndexField5"/>
									<mx:AdvancedDataGridColumn width="20"/>
								</mx:groupedColumns>
								
								<!--<mx:columns>
								<mx:AdvancedDataGridColumn width="20"/>
								<mx:AdvancedDataGridColumn width="20"/>
								<mx:AdvancedDataGridColumn width="20"/>
								<mx:AdvancedDataGridColumn dataField="IndexValue1" headerText="IndexField1"/>
								<mx:AdvancedDataGridColumn dataField="IndexValue2" headerText="IndexField2"/>
								<mx:AdvancedDataGridColumn dataField="IndexValue3" headerText="IndexField3"/>
								<mx:AdvancedDataGridColumn dataField="IndexValue4" headerText="IndexField4"/>
								<mx:AdvancedDataGridColumn dataField="IndexValue5" headerText="IndexField5"/>
								<mx:AdvancedDataGridColumn width="20"/>
								</mx:columns>-->
								
								<!--<s:ArrayList>
								<s:GridColumn width="20"/>
								<s:GridColumn width="20"/>
								<s:GridColumn width="20"/>
								<s:GridColumn dataField="IndexValue1" headerText="IndexField1"/>
								<s:GridColumn dataField="IndexValue2" headerText="IndexField2"/>
								<s:GridColumn dataField="IndexValue3" headerText="IndexField3"/>
								<s:GridColumn dataField="IndexValue4" headerText="IndexField4"/>
								<s:GridColumn dataField="IndexValue5" headerText="IndexField5"/>
								<s:GridColumn width="20"/>
								</s:ArrayList>
								
								<s:typicalItem>
								<fx:Object dataField1="Sample Data" dataField2="Sample Data"
								dataField3="Sample Data"></fx:Object>
								</s:typicalItem>
								<s:ArrayList>
								<fx:Object dataField1="data1" dataField2="data1" dataField3="data1"></fx:Object>
								<fx:Object dataField1="data2" dataField2="data2" dataField3="data2"></fx:Object>
								<fx:Object dataField1="data3" dataField2="data3" dataField3="data3"></fx:Object>
								<fx:Object dataField1="data4" dataField2="data4" dataField3="data4"></fx:Object>
								</s:ArrayList>-->
							</mx:AdvancedDataGrid>
							
						</component:CustomTitleWindow>
						<component:CustomTitleWindow title="DocumentClass2" 
									   height="100%" width="100%" headerHeight="16" 
									   dropShadowVisible="false" skinClass="component.CustomTitleWindowSkin" 
									   fontFamily="Franklin Gothic Medium" fontSize="13" fontWeight="bold">
							<mx:AdvancedDataGrid height="100%" width="100%" borderVisible="false" rowHeight="20"
										fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal">
								
								<mx:dataProvider>
									<mx:ArrayCollection>
										<fx:Object IndexValue1="xxxx" IndexValue2="xxxx" IndexValue3="xxxx" IndexValue4="xxxx" IndexValue5="xxxx"></fx:Object>
										<fx:Object IndexValue1="xxxx" IndexValue2="xxxx" IndexValue3="xxxx" IndexValue4="xxxx" IndexValue5="xxxx"></fx:Object>
										<fx:Object IndexValue1="xxxx" IndexValue2="xxxx" IndexValue3="xxxx" IndexValue4="xxxx" IndexValue5="xxxx"></fx:Object>
									</mx:ArrayCollection>
								</mx:dataProvider>
								
								<mx:groupedColumns>
									<mx:AdvancedDataGridColumn width="20" editorDataField="selected" sortable="false">
										<mx:headerRenderer>
											<fx:Component>
												<mx:HBox horizontalAlign="center" verticalAlign="middle" paddingLeft="2" paddingRight="2">
													<!--<mx:CheckBox /> selected="{outerDocument.deleteAll}" change="outerDocument.setDeleteAll()"-->
													<component:ExtendsCheckbox2 width="10" isTristate="true" state="-1"/>
												</mx:HBox>
											</fx:Component>
										</mx:headerRenderer>
										<mx:itemRenderer>
											<fx:Component>
												<mx:HBox horizontalAlign="center" verticalAlign="middle" paddingLeft="2" paddingRight="2">
													<!--<mx:CheckBox/> selected="{data.isDelete}" change="outerDocument.setDeleteAt(data.internalSv)"-->
													<component:ExtendsCheckbox2 width="10" isTristate="false" state="1"/>
												</mx:HBox>
											</fx:Component>
										</mx:itemRenderer>
									</mx:AdvancedDataGridColumn>
									
									<mx:AdvancedDataGridColumn width="20"/>
									<mx:AdvancedDataGridColumn width="20"/>
									<mx:AdvancedDataGridColumn dataField="IndexValue1" headerText="IndexField1"/>
									<mx:AdvancedDataGridColumn dataField="IndexValue2" headerText="IndexField2"/>
									<mx:AdvancedDataGridColumn dataField="IndexValue3" headerText="IndexField3"/>
									<mx:AdvancedDataGridColumn dataField="IndexValue4" headerText="IndexField4"/>
									<mx:AdvancedDataGridColumn dataField="IndexValue5" headerText="IndexField5"/>
									<mx:AdvancedDataGridColumn width="20"/>
								</mx:groupedColumns>
								
								<!--<s:columns>
									<s:ArrayList>
										<s:GridColumn width="20"/>
										<s:GridColumn width="20"/>
										<s:GridColumn width="20"/>
										<s:GridColumn dataField="IndexValue1" headerText="IndexField1"/>
										<s:GridColumn dataField="IndexValue2" headerText="IndexField2"/>
										<s:GridColumn dataField="IndexValue3" headerText="IndexField3"/>
										<s:GridColumn dataField="IndexValue4" headerText="IndexField4"/>
										<s:GridColumn dataField="IndexValue5" headerText="IndexField5"/>
										<s:GridColumn width="20"/>
									</s:ArrayList>
								</s:columns>
								<s:typicalItem>
									<fx:Object dataField1="Sample Data" dataField2="Sample Data"
											   dataField3="Sample Data"></fx:Object>
								</s:typicalItem>
								<s:ArrayList>
									<fx:Object dataField1="data1" dataField2="data1" dataField3="data1"></fx:Object>
									<fx:Object dataField1="data2" dataField2="data2" dataField3="data2"></fx:Object>
									<fx:Object dataField1="data3" dataField2="data3" dataField3="data3"></fx:Object>
									<fx:Object dataField1="data4" dataField2="data4" dataField3="data4"></fx:Object>
								</s:ArrayList>-->
							</mx:AdvancedDataGrid>
						</component:CustomTitleWindow>
					</mx:VDividedBox>

					
					<!--Action controls-->
					<s:BorderContainer width="100%" height="24" borderVisible="false">
						<s:layout>
							<s:HorizontalLayout/>
						</s:layout>
						<s:BorderContainer borderVisible="false">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="left" verticalAlign="middle"/>
							</s:layout>
							<s:Button label="View" height="22" 
								  buttonMode="true" styleName="viewButton"
								  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold"/>
							<s:RadioButton groupName="rbgroup"
									   label="In original format" selected="true" 
									   fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
							<s:RadioButton groupName="rbgroup"
										   label="As Image(s)" 
										   fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
							<s:RadioButton groupName="rbgroup"
										   label="As PDF file(s)" 
										   fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal"/>
						</s:BorderContainer>
						<s:BorderContainer width="100%" height="24" borderVisible="false">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="right"/>
							</s:layout>
							
							<s:Button label="Print" height="21" buttonMode="true" styleName="printButton" 
									  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold"/>
							<s:Button label="Email" height="21" buttonMode="true" styleName="emailButton" 
									  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold"/>
							<s:Button label="Fax" height="21" buttonMode="true" styleName="faxButton" 
									  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold"/>
							<s:Button label="Save" height="21" buttonMode="true" styleName="saveButton" 
									  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold"/>
							<s:Button label="Check Out" height="21" buttonMode="true" styleName="checkOutButton" 	
									  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold"/>
							<s:Button label="File" height="21" buttonMode="true" styleName="fileButton" 
									  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold"/>
							<s:Button label="Reindex" height="21" buttonMode="true" styleName="reIndexButton" 
									  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold"/>
							<s:Button label="Delete" height="21" buttonMode="true" styleName="deleteButton" 
									  fontFamily="Franklin Gothic Medium" fontSize="12" fontWeight="bold"/>
						</s:BorderContainer>
						
					</s:BorderContainer>
				</s:BorderContainer>
					
			<!--End SearchFiltersAndSearchResults-->
			</s:BorderContainer>
			
		<!--End stage-->
		</s:BorderContainer>
		
		<s:Spacer height="5"/>
		<!--Common footer-->
		<s:BorderContainer width="100%" height="18" borderVisible="false" backgroundColor="#00315B7E">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle" paddingLeft="5" paddingRight="5"/>
			</s:layout>
			<s:HGroup width="100%" horizontalAlign="left">
				<s:Label text="This copy of Orion Xerver is licensed to: CustomerName" 
						 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal" color="#00C1DAD6"/>			
			</s:HGroup>
			<s:HGroup width="100%" horizontalAlign="center">
				<s:Label text="Copyright 2013 Magsoft" 
						 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal" color="#00C1DAD6"/>
			</s:HGroup>
			<s:HGroup width="100%" horizontalAlign="right">
				<s:Label text="Credits" 
						 fontFamily="Franklin Gothic Medium" fontSize="11" fontWeight="normal" color="#00C1DAD6"/>				
			</s:HGroup>
		</s:BorderContainer>
		<!--End common footer-->
		
	</s:BorderContainer>
</mx:Canvas>
